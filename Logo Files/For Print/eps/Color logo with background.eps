%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2400 1836
%%HiResBoundingBox: 0 0 2400 1836
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2400 1836 re
W
q
[0.24 0 0 -0.24 0 1836] cm
q
0 0 10000 7650 re
W*
q
[3.124992 0 0 3.125092 0.0124667 0] cm
/DeviceRGB {} CS
[0.2275 0.2549 0.3608] SC
/DeviceRGB {} cs
[0.2275 0.2549 0.3608] sc
0 0 3200 2447.928 re
f
Q
q
[13.300453 0 0 13.300878 3004.9324 192.43311] cm
q
209.10001 9.1 m
198.90001 9.900001 189.40001 19.299999 188.40001 29.5 c
188.20001 31 188.20001 32.5 188.40001 33.900002 c
189.10001 41.800003 186.10001 49.600002 180.40001 55.200001 c
179.10001 56.400002 l
176.40001 59 170.60001 60.700001 165 61.700001 c
155.100006 63.400002 144.899994 63.400002 135 61.700001 c
129.399994 60.700001 123.599998 59.100002 120.900002 56.400002 c
119.700005 55.200001 l
114.000008 49.700001 111.000008 41.800003 111.700005 33.900002 c
111.800003 32.400002 111.800003 31.000002 111.700005 29.500002 c
110.700005 19.300003 101.100006 9.900002 90.900009 9.100002 c
76.900002 8 65.300003 19.6 66.400002 33.599998 c
67.300003 44.599998 76.099998 53.5 87.100006 54.399998 c
88.600006 54.499996 90.000008 54.499996 91.400009 54.399998 c
99.500008 53.599998 107.600006 55.999996 113.400009 61.799999 c
114.500008 62.899998 l
120.800011 69 123.500008 77.899994 122.100006 86.599998 c
121.700005 88.699997 121.600006 90.900002 121.800003 93.099998 c
122.800003 106.900002 134.100006 118.199997 147.900009 119.099998 c
164.400009 120.199997 178.10001 107.199997 178.10001 91 c
178.10001 89.400002 177.90001 87.699997 177.60001 86.199997 c
176.10001 77.599998 179.10001 68.899994 185.40001 62.799995 c
186.40001 61.799995 l
192.20001 56.199997 200.3 53.599995 208.40001 54.399994 c
209.8 54.599995 211.20001 54.599995 212.70001 54.399994 c
223.70001 53.499992 232.50002 44.599995 233.40001 33.599995 c
234.7 19.6 223.10001 8 209.10001 9.1 c
h
W
[167.171973 0 0 110.137339 66.327691 9.02768] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0.006147 def
/yMin -0.009331 def
/xMax 1.00718 def
/yMax 1.009397 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc0_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc0_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc0_0 } {
0.5 sub 2 mul 0 add xpdfFunc0_1
} ifelse
}
def
-0.006147 1.00718 0 axialSH
Q
q
9.1 90.900002 m
9.900001 101.099998 19.299999 110.600006 29.5 111.600006 c
31 111.800003 32.5 111.800003 33.900002 111.600006 c
41.800003 110.900009 49.600002 113.900009 55.200001 119.600006 c
56.400002 120.900009 l
59 123.600006 60.700001 129.400009 61.700001 135.000015 c
63.400002 144.900009 63.400002 155.100021 61.700001 165.000015 c
60.700001 170.60002 59.100002 176.40001 56.400002 179.10002 c
55.200001 180.30002 l
49.700001 186.00002 41.800003 189.00002 33.900002 188.30002 c
32.400002 188.20001 31.000002 188.20001 29.500002 188.30002 c
19.300003 189.30002 9.900002 198.90002 9.100002 209.10002 c
8.000002 223.10002 19.600002 234.80002 33.700005 233.60002 c
44.700005 232.70003 53.600006 223.90002 54.500004 212.90002 c
54.600002 211.40002 54.600002 210.00003 54.500004 208.60002 c
53.700005 200.50002 56.100002 192.40002 61.900005 186.60002 c
63.000004 185.50002 l
69.100006 179.20001 78 176.50002 86.700005 177.90001 c
88.800003 178.3 91.000008 178.40001 93.200005 178.20001 c
107.000008 177.20001 118.300003 165.900009 119.200005 152.100006 c
120.300003 135.600006 107.300003 121.900009 91.100006 121.900009 c
89.500008 121.900009 87.800003 122.100006 86.300003 122.400009 c
77.700005 123.900009 69 120.900009 62.900002 114.600006 c
61.900002 113.600006 l
56.300003 107.800003 53.700001 99.700005 54.5 91.600006 c
54.700001 90.200005 54.700001 88.800003 54.5 87.300003 c
53.5 76.300003 44.599998 67.400002 33.599998 66.600006 c
19.6 65.300003 8 76.900002 9.1 90.900002 c
h
W
[110.237348 0 0 167.18448 9.027686 66.500382] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0.009322 def
/yMin -0.00718 def
/xMax 1.009389 def
/yMax 1.00667 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc1_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc1_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc1_0 } {
0.5 sub 2 mul 0 add xpdfFunc1_1
} ifelse
}
def
-0.009322 1.009389 0 axialSH
Q
q
90.900002 290.89999 m
101.099998 290.10001 110.600006 280.69998 111.600006 270.5 c
111.800003 269 111.800003 267.5 111.600006 266.10001 c
110.900009 258.20001 113.900009 250.40001 119.600006 244.8 c
120.800003 243.60001 l
123.5 241 129.300003 239.3 134.900009 238.3 c
144.800003 236.60001 155.000015 236.60001 164.900009 238.3 c
170.50002 239.3 176.3 240.90001 179.00002 243.60001 c
180.20001 244.8 l
185.90001 250.3 188.90001 258.20001 188.20001 266.10001 c
188.10001 267.60001 188.10001 269 188.20001 270.5 c
189.20001 280.70001 198.80002 290.10001 208.90001 290.89999 c
222.90001 292 234.60001 280.39999 233.40001 266.29999 c
232.50002 255.29999 223.70001 246.39999 212.70001 245.49998 c
211.20001 245.39998 209.80002 245.39998 208.40001 245.49998 c
200.3 246.29999 192.20001 243.89998 186.40001 238.09999 c
185.3 236.99998 l
179 230.89998 176.3 221.99998 177.7 213.29999 c
178.09999 211.19998 178.2 208.99998 178 206.79999 c
177 192.99998 165.699997 181.69998 151.899994 180.79999 c
135.399994 179.69998 121.699997 192.69998 121.699997 208.89999 c
121.699997 210.5 121.899994 212.2 122.199997 213.7 c
123.699997 222.3 120.699997 231 114.399994 237.09999 c
113.399994 238.09999 l
107.599991 243.7 99.499992 246.29999 91.399994 245.49998 c
89.999992 245.29999 88.599991 245.29999 87.099991 245.49998 c
76.099991 246.39998 67.299988 255.29999 66.399994 266.29999 c
65.300003 280.39999 76.900002 292 90.900002 290.89999 c
h
W
[167.157156 0 0 110.23732 66.327691 180.734944] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0.006148 def
/yMin -0.009389 def
/xMax 1.006671 def
/yMax 1.009323 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc2_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc2_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc2_0 } {
0.5 sub 2 mul 0 add xpdfFunc2_1
} ifelse
}
def
-0.006148 1.006671 0 axialSH
Q
q
290.89999 209.10001 m
290.10001 198.90001 280.69998 189.40001 270.5 188.40001 c
269 188.20001 267.5 188.20001 266.10001 188.40001 c
258.20001 189.10001 250.40001 186.10001 244.8 180.40001 c
243.60001 179.10001 l
241 176.40001 239.3 170.60001 238.3 165 c
236.60001 155.100006 236.60001 144.899994 238.3 135 c
239.3 129.399994 240.90001 123.599998 243.60001 120.900002 c
244.8 119.700005 l
250.3 114.000008 258.20001 111.000008 266.10001 111.700005 c
267.60001 111.800003 269 111.800003 270.5 111.700005 c
280.70001 110.700005 290.10001 101.100006 290.89999 91 c
292 77 280.39999 65.300003 266.29999 66.5 c
255.29999 67.400002 246.39999 76.199997 245.49998 87.199997 c
245.39998 88.699997 245.39998 90.099998 245.49998 91.5 c
246.29999 99.599998 243.89998 107.699997 238.09999 113.5 c
236.99998 114.599998 l
230.89998 120.900002 221.99998 123.599998 213.29999 122.199997 c
211.19998 121.799995 208.99998 121.699997 206.79999 121.899994 c
192.99998 122.899994 181.69998 134.199997 180.79999 148 c
179.69998 164.5 192.69998 178.2 208.89999 178.2 c
210.5 178.2 212.2 178 213.7 177.7 c
222.3 176.2 231 179.2 237.09999 185.5 c
238.09999 186.5 l
243.7 192.3 246.29999 200.39999 245.49998 208.5 c
245.29999 209.89999 245.29999 211.3 245.49998 212.8 c
246.39998 223.8 255.29999 232.60001 266.29999 233.5 c
280.39999 234.7 292 223.10001 290.89999 209.10001 c
h
W
[110.23732 0 0 167.170292 180.734962 66.415183] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0.009389 def
/yMin -0.006671 def
/xMax 1.009323 def
/yMax 1.006667 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc3_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc3_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc3_0 } {
0.5 sub 2 mul 0 add xpdfFunc3_1
} ifelse
}
def
-0.009389 1.009323 0 axialSH
Q
q
89.099998 107.199997 m
99.099998 107.199997 107.300003 99.099998 107.300003 89 c
107.300003 79 99.200005 70.800003 89.100006 70.800003 c
79.100006 70.800003 70.900009 78.900002 70.900009 89 c
70.900002 99.099998 79 107.199997 89.099998 107.199997 c
h
W
[36.399994 0 0 36.399994 70.900007 70.800017] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0 def
/yMin -0 def
/xMax 1 def
/yMax 1 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc4_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc4_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc4_0 } {
0.5 sub 2 mul 0 add xpdfFunc4_1
} ifelse
}
def
-0 1 0 axialSH
Q
q
89.099998 229.10001 m
99.099998 229.10001 107.300003 221 107.300003 210.90001 c
107.300003 200.90001 99.200005 192.70001 89.100006 192.70001 c
79.100006 192.70001 70.900009 200.80002 70.900009 210.90001 c
70.900002 221 79 229.10001 89.099998 229.10001 c
h
W
[36.399994 0 0 36.399994 70.900007 192.700029] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0 def
/yMin -0.000001 def
/xMax 1 def
/yMax 1 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc5_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc5_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc5_0 } {
0.5 sub 2 mul 0 add xpdfFunc5_1
} ifelse
}
def
-0 1 0 axialSH
Q
q
210.89999 229.10001 m
220.89999 229.10001 229.09999 221 229.09999 210.90001 c
229.09999 200.90001 220.99998 192.70001 210.89999 192.70001 c
200.89999 192.70001 192.7 200.80002 192.7 210.90001 c
192.8 221 200.89999 229.10001 210.89999 229.10001 c
h
W
[36.399994 0 0 36.399994 192.700006 192.700029] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0 def
/yMin -0.000001 def
/xMax 1 def
/yMax 1 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc6_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc6_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc6_0 } {
0.5 sub 2 mul 0 add xpdfFunc6_1
} ifelse
}
def
-0 1 0 axialSH
Q
q
210.89999 107.199997 m
220.89999 107.199997 229.09999 99.099998 229.09999 89 c
229.09999 79 220.99998 70.800003 210.89999 70.800003 c
200.89999 70.800003 192.7 78.900002 192.7 89 c
192.8 99.099998 200.89999 107.199997 210.89999 107.199997 c
h
W
[36.399994 0 0 36.399994 192.700006 70.800017] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0 def
/yMin -0 def
/xMax 1 def
/yMax 1 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc7_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc7_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc7_0 } {
0.5 sub 2 mul 0 add xpdfFunc7_1
} ifelse
}
def
-0 1 0 axialSH
Q
q
150 168.2 m
160 168.2 168.2 160.099991 168.2 150 c
168.2 139.900009 160.099991 131.800003 150 131.800003 c
139.900009 131.800003 131.800003 139.900009 131.800003 150 c
131.800003 160.099991 140 168.2 150 168.2 c
h
W
[36.399994 0 0 36.399994 131.800008 131.799985] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0 def
/yMin 0 def
/xMax 1 def
/yMax 1.000001 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc8_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc8_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc8_0 } {
0.5 sub 2 mul 0 add xpdfFunc8_1
} ifelse
}
def
-0 1 0 axialSH
Q
Q
q
[150.723099 0 0 150.727921 207.00526 3765.1833] cm
q
7.6 14.12 m
9.04 14.16 10.88 14.16 12.219999 14.099999 c
12.219999 14.619999 l
11.74 14.699999 l
10.86 14.839999 10.96 15.719999 10.96 17.239998 c
10.96 17.839998 10.980001 18.459997 11.020001 18.999998 c
11.400001 19.039999 l
11.500001 19.059999 11.540001 19.119999 11.540001 19.199999 c
11.540001 19.639999 l
11.220001 19.58 10.900001 19.58 10.680001 19.58 c
9.180001 19.58 8.640001 20.26 6.480001 20.26 c
3.080001 20.26 0.700002 17.42 0.700002 13.72 c
0.700002 10.04 2.980002 7.26 6.300002 7.26 c
7.700002 7.26 8.080002 7.64 9.300001 7.64 c
9.500001 7.64 9.620001 7.64 9.900002 7.6 c
10.120002 8.740001 10.400002 9.780001 10.940002 11 c
10.020001 11 l
9.200002 9.020001 8.060001 7.84 6.020001 7.84 c
4.440002 7.84 2.740001 9.12 2.740001 13.16 c
2.740001 16.940001 4.440002 19.66 6.620002 19.66 c
9.120002 19.66 9.200002 18.780001 9.200002 16.24 c
9.200002 15 9.260002 14.78 8.120002 14.68 c
7.600002 14.62 l
7.600002 14.12 l
7.6 14.12 l
h
20.879999 18.1 m
20.879999 18.780001 21.279999 18.92 22.059999 18.84 c
22.059999 19.4 l
20.5 19.76 19.959999 20.24 19.459999 20.24 c
19.199999 20.24 19.039999 20.1 19.059999 19.76 c
19.16 18.24 l
18.68 19.119999 17.68 20.24 16.040001 20.24 c
14.700001 20.24 13.120001 19.58 13.120001 17.700001 c
13.120001 15.960001 14.220001 14.700001 19.060001 13.68 c
19.060001 13.08 l
19.060001 11.18 19.040001 10.32 17.940001 10.32 c
14.820001 10.32 16.300001 13.299999 14.68 13.299999 c
14.1 13.299999 13.820001 12.94 13.820001 12.459999 c
13.820001 11.019999 15.660001 9.799999 17.960001 9.799999 c
20.320002 9.799999 20.880001 10.639999 20.880001 13.079999 c
20.880001 18.099998 l
20.879999 18.1 l
h
16.66 19.42 m
17.98 19.42 18.799999 18.040001 19.059999 17.4 c
19.059999 14.24 l
15.379999 15.06 15.06 16.66 15.06 17.6 c
15.06 18.700001 15.66 19.42 16.66 19.42 c
h
37.240002 18.74 m
37.240002 19.24 37.780003 19.4 38.420002 19.48 c
38.420002 20 l
37.040001 19.940001 35.640003 19.940001 34.240002 20 c
34.240002 19.48 l
34.900002 19.4 35.420002 19.24 35.420002 18.74 c
35.420002 12.98 l
35.420002 11.56 35.120003 10.599999 34.140003 10.599999 c
32.820004 10.599999 31.740004 11.919999 31.460003 12.52 c
31.460003 18.74 l
31.460003 19.24 32.000004 19.4 32.640003 19.48 c
32.640003 20 l
31.260004 19.940001 29.860003 19.940001 28.460003 20 c
28.460003 19.48 l
29.120003 19.4 29.640003 19.24 29.640003 18.74 c
29.640003 12.98 l
29.640003 11.56 29.340004 10.599999 28.340004 10.599999 c
27.020004 10.599999 25.960003 11.919999 25.680004 12.52 c
25.680004 18.74 l
25.680004 19.24 26.220005 19.4 26.860004 19.48 c
26.860004 20 l
25.480005 19.940001 24.080004 19.940001 22.680004 20 c
22.680004 19.48 l
23.340004 19.4 23.860004 19.24 23.860004 18.74 c
23.860004 11.94 l
23.860004 11.259999 23.440004 11.08 22.660004 11.179999 c
22.660004 10.66 l
24.200005 10.42 24.880003 9.76 25.300003 9.76 c
25.540003 9.76 25.720003 9.940001 25.680002 10.26 c
25.500002 11.92 l
25.920002 11.24 27.000002 9.8 28.980001 9.8 c
30.220001 9.8 31.120001 10.54 31.340002 11.92 c
31.720001 11.22 32.800003 9.8 34.800003 9.8 c
36.460003 9.8 37.240002 10.74 37.240002 12.780001 c
37.240002 18.740002 l
37.240002 18.74 l
h
46.98 18.1 m
46.98 18.780001 47.380001 18.92 48.16 18.84 c
48.16 19.4 l
46.599998 19.76 46.060001 20.24 45.560001 20.24 c
45.300003 20.24 45.140003 20.1 45.16 19.76 c
45.259998 18.24 l
44.779999 19.119999 43.779999 20.24 42.139999 20.24 c
40.799999 20.24 39.220001 19.58 39.220001 17.700001 c
39.220001 15.960001 40.32 14.700001 45.16 13.68 c
45.16 13.08 l
45.16 11.18 45.139999 10.32 44.040001 10.32 c
40.920002 10.32 42.400002 13.299999 40.780003 13.299999 c
40.200001 13.299999 39.920002 12.94 39.920002 12.459999 c
39.920002 11.019999 41.760002 9.799999 44.060001 9.799999 c
46.420002 9.799999 46.980003 10.639999 46.980003 13.079999 c
46.980003 18.099998 l
46.98 18.1 l
h
42.759998 19.42 m
44.079998 19.42 44.899998 18.040001 45.16 17.4 c
45.16 14.24 l
41.48 15.06 41.16 16.66 41.16 17.6 c
41.16 18.700001 41.759998 19.42 42.759998 19.42 c
h
50.799999 8.1 m
50.279999 8.1 49.799999 7.66 49.799999 7.1 c
49.799999 6.58 50.279999 6.12 50.799999 6.12 c
51.34 6.12 51.799999 6.58 51.799999 7.1 c
51.799999 7.66 51.34 8.1 50.799999 8.1 c
h
51.880001 18.74 m
51.880001 19.24 52.420002 19.4 53.060001 19.48 c
53.060001 20 l
51.66 19.940001 50.280003 19.940001 48.880001 20 c
48.880001 19.48 l
49.540001 19.4 50.060001 19.24 50.060001 18.74 c
50.060001 11.82 l
50.060001 11.16 49.640003 10.98 48.860001 11.02 c
48.860001 10.5 l
50.440002 10.28 51.080002 9.76 51.48 9.76 c
51.779999 9.76 52 9.88 52 10.24 c
52 10.76 51.880001 11.48 51.880001 12.719999 c
51.880001 18.74 l
h
61.720001 18.1 m
61.720001 18.780001 62.120003 18.92 62.900002 18.84 c
62.900002 19.4 l
61.34 19.76 60.800003 20.24 60.300003 20.24 c
60.040005 20.24 59.880005 20.1 59.900002 19.76 c
60 18.24 l
59.52 19.119999 58.52 20.24 56.880001 20.24 c
55.540001 20.24 53.959999 19.58 53.959999 17.700001 c
53.959999 15.960001 55.059998 14.700001 59.899998 13.68 c
59.899998 13.08 l
59.899998 11.18 59.879997 10.32 58.779999 10.32 c
55.66 10.32 57.139999 13.299999 55.52 13.299999 c
54.939999 13.299999 54.66 12.94 54.66 12.459999 c
54.66 11.019999 56.5 9.799999 58.799999 9.799999 c
61.16 9.799999 61.720001 10.639999 61.720001 13.079999 c
61.720001 18.099998 l
61.720001 18.1 l
h
57.5 19.42 m
58.82 19.42 59.639999 18.040001 59.900002 17.4 c
59.900002 14.24 l
56.220001 15.06 55.900002 16.66 55.900002 17.6 c
55.900002 18.700001 56.5 19.42 57.5 19.42 c
h
W
[62.200002 0 0 14.14 0.700002 6.120002] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0 def
/yMin -0 def
/xMax 1 def
/yMax 1 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc9_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc9_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc9_0 } {
0.5 sub 2 mul 0 add xpdfFunc9_1
} ifelse
}
def
-0 1 0 axialSH
Q
Q
q
[14.659855 0 0 14.660322 1246.19775 7039.8872] cm
q
11.32 6.14 m
11.32 8.32 l
7.06 8.32 l
7.06 20 l
4.52 20 l
4.52 8.32 l
0.259999 8.32 l
0.259999 6.139999 l
11.32 6.139999 l
11.32 6.14 l
h
34.740002 6 m
36.740002 6 38.27 6.366667 39.330002 7.1 c
40.390003 7.833333 40.920002 8.953333 40.920002 10.46 c
40.920002 12.34 39.993336 13.613333 38.140003 14.28 c
38.393337 14.586666 38.680004 14.96 39.000004 15.4 c
39.320004 15.839999 39.646671 16.316666 39.980003 16.83 c
40.313335 17.343334 40.633335 17.870001 40.940002 18.41 c
41.24667 18.949999 41.52 19.48 41.760002 20 c
38.940002 20 l
38.686668 19.52 38.413334 19.036667 38.120003 18.549999 c
37.826672 18.063332 37.530003 17.589998 37.230003 17.129999 c
36.930004 16.67 36.633335 16.236668 36.340004 15.829999 c
36.046673 15.423331 35.773338 15.059998 35.520004 14.739999 c
35.33334 14.753332 35.17334 14.759999 35.040005 14.759999 c
34.660004 14.759999 l
33.440002 14.759999 l
33.440002 20 l
30.920002 20 l
30.920002 6.34 l
31.533335 6.206667 32.186668 6.116667 32.880001 6.07 c
33.573334 6.023334 34.193333 6 34.740002 6 c
h
34.919998 8.18 m
34.386665 8.18 33.893333 8.200001 33.439999 8.240001 c
33.439999 12.720001 l
34.539997 12.720001 l
35.153328 12.720001 35.693329 12.686667 36.159996 12.620001 c
36.626663 12.553334 37.016663 12.433334 37.329994 12.260001 c
37.643326 12.086668 37.879993 11.853335 38.039993 11.560001 c
38.199993 11.266667 38.279995 10.893334 38.279995 10.440002 c
38.279995 10.013334 38.199993 9.653335 38.039993 9.360002 c
37.879993 9.066669 37.649994 8.833335 37.349995 8.660002 c
37.049995 8.486669 36.693329 8.363335 36.279995 8.290002 c
35.866661 8.216669 35.413326 8.180002 34.919994 8.180002 c
34.919998 8.18 l
h
70.599998 20 m
70.41333 19.453333 70.220001 18.913334 70.019997 18.379999 c
69.819992 17.846664 69.626663 17.299999 69.439995 16.74 c
63.599995 16.74 l
63.41333 17.299999 63.223328 17.85 63.029995 18.389999 c
62.836662 18.929998 62.64666 19.466665 62.459995 20 c
59.839996 20 l
60.359997 18.52 60.853329 17.153334 61.319996 15.9 c
61.786663 14.646666 62.243328 13.459999 62.689995 12.34 c
63.136662 11.220001 63.579994 10.153335 64.019997 9.14 c
64.459999 8.126666 64.91333 7.126666 65.379997 6.14 c
67.759995 6.14 l
68.226662 7.126667 68.679993 8.126667 69.119995 9.14 c
69.559998 10.153334 70.003334 11.22 70.449997 12.34 c
70.89666 13.46 71.356659 14.646667 71.829994 15.9 c
72.303329 17.153332 72.799995 18.519999 73.319992 20 c
70.599991 20 l
70.599998 20 l
h
66.519997 8.82 m
66.213333 9.526666 65.863327 10.386666 65.469994 11.4 c
65.07666 12.413333 64.666656 13.513333 64.23999 14.7 c
68.799988 14.7 l
68.373322 13.513333 67.959991 12.406667 67.55999 11.38 c
67.159988 10.353334 66.813324 9.5 66.519989 8.82 c
66.519997 8.82 l
h
98.919998 20.299999 m
97.879997 20.299999 96.946663 20.139999 96.119995 19.82 c
95.293327 19.5 94.593323 19.030001 94.019997 18.41 c
93.446671 17.789999 93.006668 17.033333 92.699997 16.139999 c
92.393326 15.246666 92.23999 14.219999 92.239998 13.06 c
92.240005 11.9 92.416672 10.873333 92.769997 9.98 c
93.123322 9.086666 93.606659 8.33 94.219994 7.71 c
94.833328 7.09 95.553329 6.62 96.379997 6.3 c
97.206665 5.98 98.09333 5.82 99.040001 5.82 c
99.613335 5.82 100.133331 5.863333 100.599998 5.95 c
101.066666 6.036666 101.473328 6.133333 101.82 6.24 c
102.166672 6.346666 102.453339 6.46 102.68 6.58 c
102.906662 6.7 103.066666 6.786667 103.160004 6.84 c
102.420006 8.9 l
102.100006 8.7 101.643333 8.509999 101.050003 8.33 c
100.456673 8.150001 99.813339 8.06 99.120003 8.06 c
98.520004 8.06 97.959999 8.163333 97.440002 8.37 c
96.920006 8.576667 96.470001 8.886667 96.090004 9.3 c
95.710007 9.713333 95.413338 10.233334 95.200005 10.860001 c
94.986671 11.486668 94.880005 12.213334 94.880005 13.040001 c
94.880005 13.773335 94.963341 14.446668 95.130005 15.060001 c
95.296669 15.673335 95.553337 16.203335 95.900002 16.650002 c
96.246666 17.096668 96.686668 17.443335 97.220001 17.690002 c
97.753334 17.93667 98.393333 18.060003 99.139999 18.060003 c
100.033333 18.060003 100.759995 17.970003 101.32 17.790003 c
101.880005 17.610003 102.313339 17.440002 102.620003 17.280003 c
103.300003 19.340002 l
103.140007 19.446669 102.92334 19.553335 102.650002 19.660002 c
102.376663 19.766668 102.053329 19.870001 101.68 19.970001 c
101.306671 20.070002 100.886665 20.150002 100.419998 20.210001 c
99.953331 20.27 99.453331 20.300001 98.919998 20.300001 c
98.919998 20.299999 l
h
131.479996 20 m
131.133331 19.466667 130.733322 18.906668 130.279999 18.32 c
129.826675 17.733332 129.350006 17.166666 128.850006 16.619999 c
128.350006 16.073332 127.833336 15.553332 127.300003 15.06 c
126.76667 14.566667 126.239998 14.139999 125.720001 13.78 c
125.720001 20 l
123.200005 20 l
123.200005 6.14 l
125.720001 6.14 l
125.720001 11.860001 l
126.160004 11.420001 126.620003 10.950001 127.099998 10.450001 c
127.579994 9.950001 128.056656 9.443334 128.529999 8.93 c
129.003342 8.416667 129.453339 7.92 129.880005 7.440001 c
130.306671 6.960001 130.693344 6.526668 131.040009 6.14 c
134.060013 6.14 l
133.62001 6.646667 133.153351 7.173334 132.660019 7.72 c
132.166687 8.266666 131.660019 8.816667 131.140015 9.370001 c
130.62001 9.923335 130.096664 10.473334 129.570007 11.020001 c
129.04335 11.566667 128.526672 12.086666 128.020004 12.58 c
128.580002 13.006667 129.150009 13.503333 129.730011 14.07 c
130.310013 14.636666 130.88002 15.243333 131.440018 15.889999 c
132.000015 16.536667 132.536682 17.210001 133.050018 17.91 c
133.563354 18.609999 134.033356 19.306665 134.460022 20 c
131.480026 20 l
131.479996 20 l
h
180.89999 12.28 m
181.49998 11.28 182.08665 10.266666 182.65999 9.24 c
183.23332 8.213333 183.75333 7.18 184.21999 6.14 c
187.01999 6.14 l
186.27333 7.553333 185.49666 8.956667 184.68999 10.35 c
183.88332 11.743334 183.01999 13.146668 182.09999 14.56 c
182.09999 20 l
179.57999 20 l
179.57999 14.6 l
178.65999 13.173333 177.79332 11.76 176.97998 10.360001 c
176.16664 8.960001 175.38664 7.553334 174.63998 6.140001 c
177.59999 6.140001 l
178.06665 7.180001 178.57999 8.213334 179.13998 9.240001 c
179.69998 10.266667 180.28665 11.280001 180.89998 12.280001 c
180.89999 12.28 l
h
208.48 13.06 m
208.48 13.820001 208.57333 14.51 208.75999 15.13 c
208.94666 15.75 209.21666 16.276667 209.56999 16.709999 c
209.92332 17.143332 210.35332 17.48 210.85999 17.719999 c
211.36665 17.959999 211.93999 18.08 212.57999 18.08 c
213.20665 18.08 213.77332 17.959999 214.27998 17.719999 c
214.78665 17.48 215.21664 17.143332 215.56998 16.709999 c
215.92331 16.276667 216.19331 15.749999 216.37997 15.129999 c
216.56664 14.509999 216.65997 13.819999 216.65997 13.06 c
216.65997 12.3 216.56664 11.61 216.37997 10.99 c
216.19331 10.37 215.92331 9.843333 215.56998 9.41 c
215.21664 8.976667 214.78665 8.64 214.27998 8.4 c
213.77332 8.159999 213.20665 8.039999 212.57999 8.04 c
211.93999 8.04 211.36665 8.16 210.85999 8.4 c
210.35332 8.639999 209.92332 8.98 209.56999 9.42 c
209.21666 9.860001 208.94666 10.386667 208.75999 11 c
208.57333 11.613333 208.48 12.299999 208.48 13.06 c
208.48 13.06 l
h
219.3 13.06 m
219.3 14.246667 219.12334 15.293334 218.77 16.200001 c
218.41667 17.106668 217.93668 17.863335 217.33 18.470001 c
216.72333 19.076668 216.01334 19.533335 215.2 19.840002 c
214.38666 20.146669 213.51999 20.300003 212.59999 20.300001 c
211.67999 20.299999 210.80998 20.146667 209.98999 19.840002 c
209.17 19.533337 208.45667 19.07667 207.84999 18.470001 c
207.24332 17.863333 206.75999 17.106665 206.39999 16.200001 c
206.03999 15.293336 205.86 14.24667 205.86 13.06 c
205.86 11.873331 206.03999 10.829998 206.39999 9.93 c
206.75999 9.030003 207.24998 8.273336 207.87 7.66 c
208.49001 7.046665 209.20667 6.586665 210.01999 6.28 c
210.83331 5.973336 211.69331 5.820003 212.59999 5.82 c
213.50667 5.819998 214.36667 5.973332 215.17999 6.28 c
215.99332 6.586669 216.70332 7.046669 217.31 7.66 c
217.91667 8.273332 218.40001 9.029998 218.75999 9.93 c
219.11998 10.830003 219.29997 11.873336 219.29999 13.06 c
219.3 13.06 l
h
245.08 20.299999 m
244.13333 20.299999 243.32001 20.163332 242.64 19.889999 c
241.95999 19.616667 241.39667 19.233334 240.95 18.74 c
240.50333 18.246666 240.17332 17.666666 239.95999 17 c
239.74666 16.333334 239.63998 15.6 239.63998 14.8 c
239.63998 6.14 l
242.17998 6.14 l
242.17998 14.56 l
242.17998 15.186667 242.24998 15.723333 242.38998 16.17 c
242.52998 16.616667 242.73 16.98 242.98999 17.26 c
243.24998 17.540001 243.55666 17.746668 243.90999 17.880001 c
244.26332 18.013334 244.65999 18.080002 245.09999 18.080002 c
245.53999 18.080002 245.93999 18.013334 246.29999 17.880001 c
246.65999 17.746668 246.96999 17.540001 247.22998 17.26 c
247.48997 16.98 247.68999 16.616667 247.82999 16.17 c
247.96999 15.723333 248.03999 15.186667 248.03999 14.56 c
248.03999 6.14 l
250.57999 6.14 l
250.57999 14.8 l
250.57999 15.6 250.46999 16.333334 250.24998 17 c
250.02998 17.666666 249.69666 18.246666 249.24998 18.74 c
248.80331 19.233334 248.23332 19.616667 247.53998 19.889999 c
246.84663 20.163332 246.02664 20.299999 245.07997 20.299999 c
245.08 20.299999 l
h
275.29999 6 m
277.29999 6 278.82999 6.366667 279.88998 7.1 c
280.94998 7.833333 281.47998 8.953333 281.47998 10.46 c
281.47998 12.34 280.55331 13.613333 278.69998 14.28 c
278.95331 14.586666 279.23999 14.96 279.55997 15.4 c
279.87994 15.839999 280.20663 16.316666 280.53998 16.83 c
280.87332 17.343334 281.19333 17.870001 281.49997 18.41 c
281.80661 18.949999 282.07996 19.48 282.31998 20 c
279.49997 20 l
279.24664 19.52 278.9733 19.036667 278.67996 18.549999 c
278.38663 18.063332 278.08997 17.589998 277.78995 17.129999 c
277.48993 16.67 277.19327 16.236668 276.89993 15.829999 c
276.6066 15.423331 276.33325 15.059998 276.07993 14.739999 c
275.89325 14.753332 275.73325 14.759999 275.59991 14.759999 c
275.21991 14.759999 l
273.99991 14.759999 l
273.99991 20 l
271.47992 20 l
271.47992 6.34 l
272.09326 6.206667 272.74658 6.116667 273.43991 6.07 c
274.13324 6.023334 274.75323 6 275.2999 6 c
275.29999 6 l
h
275.48001 8.18 m
274.94669 8.18 274.45334 8.200001 274 8.240001 c
274 12.720001 l
275.10001 12.720001 l
275.71335 12.720001 276.25336 12.686667 276.72 12.620001 c
277.18665 12.553334 277.57666 12.433334 277.89001 12.260001 c
278.20337 12.086668 278.44003 11.853335 278.60001 11.560001 c
278.75998 11.266667 278.83997 10.893334 278.84 10.440002 c
278.84 10.013334 278.76001 9.653335 278.60001 9.360002 c
278.44 9.066669 278.21002 8.833335 277.91 8.660002 c
277.60999 8.486669 277.25333 8.363335 276.84 8.290002 c
276.42667 8.216669 275.97333 8.180002 275.48001 8.180002 c
275.48001 8.18 l
h
327.66 18.120001 m
328.56665 18.120001 329.22665 17.966667 329.64001 17.660002 c
330.05338 17.353336 330.26004 16.920002 330.26001 16.360002 c
330.26001 16.026669 330.19 15.740003 330.05002 15.500003 c
329.91003 15.260003 329.71002 15.043337 329.45001 14.850003 c
329.19 14.65667 328.87332 14.47667 328.5 14.310003 c
328.12668 14.143336 327.70001 13.980003 327.22 13.820004 c
326.73999 13.64667 326.27667 13.45667 325.82999 13.250004 c
325.3833 13.043338 324.98999 12.786671 324.64999 12.480003 c
324.31 12.173336 324.03668 11.806669 323.82999 11.380003 c
323.62329 10.953337 323.51996 10.440003 323.51999 9.840003 c
323.51999 8.58667 323.95331 7.603336 324.81998 6.890003 c
325.68665 6.17667 326.86664 5.820003 328.35999 5.820003 c
329.22665 5.820003 329.99664 5.91667 330.66998 6.110003 c
331.34332 6.303336 331.87332 6.513336 332.25998 6.740003 c
331.47998 8.780003 l
331.02664 8.52667 330.53 8.333336 329.98999 8.200003 c
329.44998 8.06667 328.89331 8.000003 328.31998 8.000003 c
327.63998 8.000003 327.10999 8.140003 326.72998 8.420003 c
326.34998 8.700003 326.15997 9.093336 326.15997 9.600003 c
326.15997 9.90667 326.2233 10.170003 326.34998 10.390003 c
326.47665 10.610004 326.65665 10.80667 326.88998 10.980003 c
327.12332 11.153337 327.39667 11.313336 327.70999 11.460003 c
328.02332 11.606669 328.36667 11.746669 328.73999 11.880003 c
329.39334 12.120003 329.97665 12.363336 330.48999 12.610003 c
331.00333 12.856669 331.43665 13.150003 331.78998 13.490003 c
332.14331 13.830003 332.4133 14.230002 332.59998 14.690002 c
332.78665 15.150003 332.87997 15.706669 332.87997 16.360002 c
332.87997 17.613335 332.43665 18.583336 331.54999 19.270002 c
330.66333 19.956669 329.36667 20.300003 327.65997 20.300003 c
327.08664 20.300003 326.56332 20.263336 326.08997 20.190002 c
325.61661 20.116669 325.19662 20.026669 324.82996 19.920002 c
324.46329 19.813335 324.14664 19.703335 323.87994 19.590002 c
323.61325 19.476669 323.39993 19.373335 323.23993 19.280003 c
323.97992 17.220003 l
324.33994 17.420002 324.8266 17.620003 325.43991 17.820004 c
326.05322 18.020004 326.79324 18.120005 327.65991 18.120003 c
327.66 18.120001 l
h
358.12 20.299999 m
357.17331 20.299999 356.35999 20.163332 355.67999 19.889999 c
355 19.616667 354.43668 19.233334 353.98999 18.74 c
353.5433 18.246666 353.21332 17.666666 353 17 c
352.78668 16.333334 352.68002 15.6 352.67999 14.8 c
352.67999 6.14 l
355.22 6.14 l
355.22 14.56 l
355.22 15.186667 355.29001 15.723333 355.42999 16.17 c
355.56998 16.616667 355.76999 16.98 356.03 17.26 c
356.29001 17.540001 356.59668 17.746668 356.95001 17.880001 c
357.30334 18.013334 357.70001 18.080002 358.14001 18.080002 c
358.58002 18.080002 358.98001 18.013334 359.34003 17.880001 c
359.70004 17.746668 360.01004 17.540001 360.27002 17.26 c
360.53 16.98 360.73001 16.616667 360.87003 16.17 c
361.01004 15.723333 361.08005 15.186667 361.08002 14.56 c
361.08002 6.14 l
363.62003 6.14 l
363.62003 14.8 l
363.62003 15.6 363.51004 16.333334 363.29004 17 c
363.07004 17.666666 362.73672 18.246666 362.29004 18.74 c
361.84335 19.233334 361.27338 19.616667 360.58005 19.889999 c
359.88672 20.163332 359.06674 20.299999 358.12006 20.299999 c
358.12 20.299999 l
h
390.67999 20.299999 m
389.63998 20.299999 388.70667 20.139999 387.88 19.82 c
387.05334 19.5 386.35333 19.030001 385.78 18.41 c
385.20667 17.789999 384.76666 17.033333 384.45999 16.139999 c
384.15332 15.246666 384 14.219999 384 13.06 c
384 11.9 384.17667 10.873333 384.53 9.98 c
384.88333 9.086666 385.36667 8.33 385.98001 7.71 c
386.59335 7.09 387.31335 6.62 388.14001 6.3 c
388.96667 5.98 389.85333 5.82 390.80002 5.82 c
391.37335 5.82 391.89334 5.863333 392.36002 5.95 c
392.82669 6.036666 393.23337 6.133333 393.58002 6.24 c
393.92667 6.346666 394.21335 6.46 394.44 6.58 c
394.66666 6.7 394.82666 6.786667 394.92001 6.84 c
394.18002 8.9 l
393.86002 8.7 393.40335 8.509999 392.81003 8.33 c
392.21671 8.150001 391.57336 8.06 390.88004 8.06 c
390.28003 8.06 389.72003 8.163333 389.20004 8.37 c
388.68005 8.576667 388.23004 8.886667 387.85004 9.3 c
387.47003 9.713333 387.17337 10.233334 386.96002 10.860001 c
386.74667 11.486668 386.64001 12.213334 386.64001 13.040001 c
386.64001 13.773335 386.72336 14.446668 386.89001 15.060001 c
387.05667 15.673335 387.31335 16.203335 387.66 16.650002 c
388.00665 17.096668 388.44666 17.443335 388.98001 17.690002 c
389.51337 17.93667 390.15335 18.060003 390.90002 18.060003 c
391.79337 18.060003 392.52002 17.970003 393.08002 17.790003 c
393.64001 17.610003 394.07333 17.440002 394.38 17.280003 c
395.06 19.340002 l
394.89999 19.446669 394.68335 19.553335 394.41 19.660002 c
394.13666 19.766668 393.81332 19.870001 393.44 19.970001 c
393.06668 20.070002 392.64667 20.150002 392.17999 20.210001 c
391.71332 20.27 391.21332 20.300001 390.67999 20.300001 c
390.67999 20.299999 l
h
421.12 20.299999 m
420.07999 20.299999 419.14667 20.139999 418.32001 19.82 c
417.49335 19.5 416.79333 19.030001 416.22 18.41 c
415.64667 17.789999 415.20667 17.033333 414.89999 16.139999 c
414.59332 15.246666 414.44 14.219999 414.44 13.06 c
414.44 11.9 414.61667 10.873333 414.97 9.98 c
415.32333 9.086666 415.80667 8.33 416.42001 7.71 c
417.03336 7.09 417.75336 6.62 418.58002 6.3 c
419.40668 5.98 420.29333 5.82 421.24002 5.82 c
421.81335 5.82 422.33334 5.863333 422.80002 5.95 c
423.26669 6.036666 423.67337 6.133333 424.02002 6.24 c
424.36667 6.346666 424.65335 6.46 424.88 6.58 c
425.10666 6.7 425.26666 6.786667 425.36002 6.84 c
424.62003 8.9 l
424.30002 8.7 423.84335 8.509999 423.25003 8.33 c
422.65671 8.150001 422.01337 8.06 421.32004 8.06 c
420.72003 8.06 420.16003 8.163333 419.64005 8.37 c
419.12006 8.576667 418.67004 8.886667 418.29004 9.3 c
417.91003 9.713333 417.61337 10.233334 417.40002 10.860001 c
417.18668 11.486668 417.08002 12.213334 417.08002 13.040001 c
417.08002 13.773335 417.16336 14.446668 417.33002 15.060001 c
417.49667 15.673335 417.75336 16.203335 418.10001 16.650002 c
418.44666 17.096668 418.88666 17.443335 419.42001 17.690002 c
419.95337 17.93667 420.59335 18.060003 421.34003 18.060003 c
422.23337 18.060003 422.96002 17.970003 423.52002 17.790003 c
424.08002 17.610003 424.51334 17.440002 424.82001 17.280003 c
425.5 19.340002 l
425.34 19.446669 425.12335 19.553335 424.85001 19.660002 c
424.57666 19.766668 424.25333 19.870001 423.88 19.970001 c
423.50668 20.070002 423.08667 20.150002 422.62 20.210001 c
422.15332 20.27 421.65332 20.300001 421.12 20.300001 c
421.12 20.299999 l
h
445.39999 20 m
445.39999 6.14 l
454.29999 6.14 l
454.29999 8.280001 l
447.91998 8.280001 l
447.91998 11.700001 l
453.59998 11.700001 l
453.59998 13.800001 l
447.91998 13.800001 l
447.91998 17.860001 l
454.77997 17.860001 l
454.77997 20 l
445.39996 20 l
445.39999 20 l
h
478.16 18.120001 m
479.06665 18.120001 479.72665 17.966667 480.14001 17.660002 c
480.55338 17.353336 480.76004 16.920002 480.76001 16.360002 c
480.76001 16.026669 480.69 15.740003 480.55002 15.500003 c
480.41003 15.260003 480.21002 15.043337 479.95001 14.850003 c
479.69 14.65667 479.37332 14.47667 479 14.310003 c
478.62668 14.143336 478.20001 13.980003 477.72 13.820004 c
477.23999 13.64667 476.77667 13.45667 476.32999 13.250004 c
475.8833 13.043338 475.48999 12.786671 475.14999 12.480003 c
474.81 12.173336 474.53668 11.806669 474.32999 11.380003 c
474.12329 10.953337 474.01996 10.440003 474.01999 9.840003 c
474.01999 8.58667 474.45331 7.603336 475.31998 6.890003 c
476.18665 6.17667 477.36664 5.820003 478.85999 5.820003 c
479.72665 5.820003 480.49664 5.91667 481.16998 6.110003 c
481.84332 6.303336 482.37332 6.513336 482.75998 6.740003 c
481.97998 8.780003 l
481.52664 8.52667 481.03 8.333336 480.48999 8.200003 c
479.94998 8.06667 479.39331 8.000003 478.81998 8.000003 c
478.13998 8.000003 477.60999 8.140003 477.22998 8.420003 c
476.84998 8.700003 476.65997 9.093336 476.65997 9.600003 c
476.65997 9.90667 476.7233 10.170003 476.84998 10.390003 c
476.97665 10.610004 477.15665 10.80667 477.38998 10.980003 c
477.62332 11.153337 477.89667 11.313336 478.20999 11.460003 c
478.52332 11.606669 478.86667 11.746669 479.23999 11.880003 c
479.89334 12.120003 480.47665 12.363336 480.98999 12.610003 c
481.50333 12.856669 481.93665 13.150003 482.28998 13.490003 c
482.64331 13.830003 482.9133 14.230002 483.09998 14.690002 c
483.28665 15.150003 483.37997 15.706669 483.37997 16.360002 c
483.37997 17.613335 482.93665 18.583336 482.04999 19.270002 c
481.16333 19.956669 479.86667 20.300003 478.15997 20.300003 c
477.58664 20.300003 477.06332 20.263336 476.58997 20.190002 c
476.11661 20.116669 475.69662 20.026669 475.32996 19.920002 c
474.96329 19.813335 474.64664 19.703335 474.37994 19.590002 c
474.11325 19.476669 473.89993 19.373335 473.73993 19.280003 c
474.47992 17.220003 l
474.83994 17.420002 475.3266 17.620003 475.93991 17.820004 c
476.55322 18.020004 477.29324 18.120005 478.15991 18.120003 c
478.16 18.120001 l
h
506.64001 18.120001 m
507.54666 18.120001 508.20667 17.966667 508.62003 17.660002 c
509.03339 17.353336 509.24005 16.920002 509.24002 16.360002 c
509.24002 16.026669 509.17001 15.740003 509.03003 15.500003 c
508.89005 15.260003 508.69003 15.043337 508.43002 14.850003 c
508.17001 14.65667 507.85333 14.47667 507.48001 14.310003 c
507.10669 14.143336 506.68002 13.980003 506.20001 13.820004 c
505.72 13.64667 505.25668 13.45667 504.81 13.250004 c
504.36331 13.043338 503.97 12.786671 503.63 12.480003 c
503.29001 12.173336 503.01669 11.806669 502.81 11.380003 c
502.6033 10.953337 502.49997 10.440003 502.5 9.840003 c
502.5 8.58667 502.93332 7.603336 503.79999 6.890003 c
504.66666 6.17667 505.84665 5.820003 507.34 5.820003 c
508.20667 5.820003 508.97665 5.91667 509.64999 6.110003 c
510.32333 6.303336 510.85333 6.513336 511.23999 6.740003 c
510.45999 8.780003 l
510.00665 8.52667 509.51001 8.333336 508.97 8.200003 c
508.42999 8.06667 507.87332 8.000003 507.29999 8.000003 c
506.62 8.000003 506.09 8.140003 505.70999 8.420003 c
505.32999 8.700003 505.13998 9.093336 505.13998 9.600003 c
505.13998 9.90667 505.20331 10.170003 505.32999 10.390003 c
505.45667 10.610004 505.63666 10.80667 505.87 10.980003 c
506.10333 11.153337 506.37668 11.313336 506.69 11.460003 c
507.00333 11.606669 507.34668 11.746669 507.72 11.880003 c
508.37335 12.120003 508.95667 12.363336 509.47 12.610003 c
509.98334 12.856669 510.41666 13.150003 510.76999 13.490003 c
511.12332 13.830003 511.39331 14.230002 511.57999 14.690002 c
511.76666 15.150003 511.85999 15.706669 511.85999 16.360002 c
511.85999 17.613335 511.41666 18.583336 510.53 19.270002 c
509.64334 19.956669 508.34668 20.300003 506.63998 20.300003 c
506.06665 20.300003 505.54333 20.263336 505.06998 20.190002 c
504.59662 20.116669 504.17664 20.026669 503.80997 19.920002 c
503.4433 19.813335 503.12665 19.703335 502.85995 19.590002 c
502.59326 19.476669 502.37994 19.373335 502.21994 19.280003 c
502.95993 17.220003 l
503.31995 17.420002 503.80661 17.620003 504.41992 17.820004 c
505.03323 18.020004 505.77325 18.120005 506.63992 18.120003 c
506.64001 18.120001 l
h
W
[511.599986 0 0 14.480004 0.260002 5.820006] cm
/DeviceRGB {} cs
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0 def
/yMin -0.000001 def
/xMax 1 def
/yMax 1 def
/n 3 def
/func { dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp 0.396 mul 0.565 add
1 index 1 exp 0.556 mul 0.369 add
2 index 1 exp 0.459 mul 0.149 add
4 3 roll pop 
}
/xpdfFunc10_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 index 1 exp -0.396 mul 0.961 add
1 index 1 exp -0.556 mul 0.925 add
2 index 1 exp -0.459 mul 0.608 add
4 3 roll pop 
}
/xpdfFunc10_1 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.5 lt { 0 sub 2 mul 0 add xpdfFunc10_0 } {
0.5 sub 2 mul 0 add xpdfFunc10_1
} ifelse
}
def
-0 1 0 axialSH
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
